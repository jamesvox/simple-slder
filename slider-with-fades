<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Image/Text Slider with Infinite Looping</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- Tailwind CSS via CDN -->
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    .fade {
      opacity: 1;
      transition: opacity 0.4s;
    }
    .fade-out {
      opacity: 0;
      transition: opacity 0.4s;
    }
  </style>
</head>
<body class="bg-gray-100 min-h-screen flex items-center justify-center">
  <div id="slider-container" class="max-w-2xl w-full mx-auto"></div>

  <script>
    const slides = [
      {
        image: "https://placekitten.com/300/200",
        text: "This is the first slide. Cute kitten!",
      },
      {
        image: "https://placekitten.com/301/200",
        text: "Here is the second slide. Another kitten!",
      },
      {
        image: "https://placekitten.com/302/200",
        text: "Third slide, more kitten goodness.",
      },
      {
        image: "https://placekitten.com/303/200",
        text: "Fourth slide. You get the idea.",
      },
      {
        image: "https://placekitten.com/304/200",
        text: "Fifth slide, just to show overflow.",
      },
      {
        image: "https://placekitten.com/305/200",
        text: "Sixth slide, for unlimited support.",
      },
      {
        image: "https://placekitten.com/306/200",
        text: "Seventh slide. See the thumbnails scroll.",
      },
    ];

    const MAX_VISIBLE_BUTTONS = 4;
    let current = 0;
    let animating = false;

    // Circular mod for negative values
    function mod(n, m) {
      return ((n % m) + m) % m;
    }

    // Returns an array of indices for the visible thumbnails, centered around current
    function getThumbnailIndices() {
      let indices = [];
      let total = slides.length;
      // If slides <= MAX_VISIBLE_BUTTONS, show all
      if (total <= MAX_VISIBLE_BUTTONS) {
        for (let i = 0; i < total; i++) indices.push(i);
      } else {
        // Center current if possible, otherwise shift to show next slides
        let start = current - Math.floor(MAX_VISIBLE_BUTTONS / 2);
        for (let i = 0; i < MAX_VISIBLE_BUTTONS; i++) {
          indices.push(mod(start + i, total));
        }
      }
      return indices;
    }

    function renderSlider(fadeType = "fade") {
      const sliderContainer = document.getElementById("slider-container");
      const thumbIndices = getThumbnailIndices();

      sliderContainer.innerHTML = `
        <div id="main-slide-wrapper">
          <div id="main-slide" class="flex bg-white rounded-2xl shadow-lg overflow-hidden ${fadeType}">
            <img src="${slides[current].image}" alt="Slide ${current+1}" class="w-1/2 object-cover">
            <div class="w-1/2 p-6 flex items-center text-lg">${slides[current].text}</div>
          </div>
        </div>
        <div class="flex justify-center mt-4 gap-2" id="thumbnails-row">
          <button
            class="px-2 py-1 rounded-lg bg-gray-200 hover:bg-gray-300"
            onclick="goToSlide('prev')"
          >Prev</button>
          ${thumbIndices.map((slideIndex) => `
              <button
                class="
                  flex items-center justify-center
                  ${slideIndex === current
                    ? 'ring-4 ring-blue-400 bg-blue-100 scale-110 z-10'
                    : 'bg-gray-200 hover:bg-gray-300'}
                  w-12 h-12 rounded-full overflow-hidden transition-all duration-150
                "
                style="padding:0;"
                onclick="goToSlide(${slideIndex})"
                aria-label="Go to slide ${slideIndex + 1}"
              >
                <img
                  src="${slides[slideIndex].image}"
                  alt="Slide ${slideIndex + 1}"
                  class="object-cover w-full h-full"
                />
              </button>
          `).join('')}
          <button
            class="px-2 py-1 rounded-lg bg-gray-200 hover:bg-gray-300"
            onclick="goToSlide('next')"
          >Next</button>
        </div>
      `;
    }

    function fadeSlideOutThenIn(target) {
      if (animating) return;

      let nextIndex;
      if (target === 'next') {
        nextIndex = mod(current + 1, slides.length);
      } else if (target === 'prev') {
        nextIndex = mod(current - 1, slides.length);
      } else if (typeof target === 'number') {
        nextIndex = mod(target, slides.length);
      } else {
        return;
      }

      if (nextIndex === current) return;
      animating = true;
      const mainSlide = document.getElementById("main-slide");
      if (mainSlide) {
        mainSlide.classList.remove("fade");
        mainSlide.classList.add("fade-out");
      }

      setTimeout(() => {
        current = nextIndex;
        // Only re-render the main content, not the buttons
        const mainSlideWrapper = document.getElementById("main-slide-wrapper");
        if (mainSlideWrapper) {
          mainSlideWrapper.innerHTML = `
            <div id="main-slide" class="flex bg-white rounded-2xl shadow-lg overflow-hidden fade-out">
              <img src="${slides[current].image}" alt="Slide ${current+1}" class="w-1/2 object-cover">
              <div class="w-1/2 p-6 flex items-center text-lg">${slides[current].text}</div>
            </div>
          `;
          setTimeout(() => {
            const newMainSlide = document.getElementById("main-slide");
            if (newMainSlide) {
              newMainSlide.classList.remove("fade-out");
              newMainSlide.classList.add("fade");
            }
            animating = false;
          }, 30);
        }
        // Always update the thumbnails row in case visible range changes
        updateThumbnails();
      }, 400); // match CSS transition
    }

    function updateThumbnails() {
      const thumbnailsRow = document.getElementById("thumbnails-row");
      const thumbIndices = getThumbnailIndices();
      if (thumbnailsRow) {
        thumbnailsRow.innerHTML = `
          <button
            class="px-2 py-1 rounded-lg bg-gray-200 hover:bg-gray-300"
            onclick="goToSlide('prev')"
          >Prev</button>
          ${thumbIndices.map((slideIndex) => `
              <button
                class="
                  flex items-center justify-center
                  ${slideIndex === current
                    ? 'ring-4 ring-blue-400 bg-blue-100 scale-110 z-10'
                    : 'bg-gray-200 hover:bg-gray-300'}
                  w-12 h-12 rounded-full overflow-hidden transition-all duration-150
                "
                style="padding:0;"
                onclick="goToSlide(${slideIndex})"
                aria-label="Go to slide ${slideIndex + 1}"
              >
                <img
                  src="${slides[slideIndex].image}"
                  alt="Slide ${slideIndex + 1}"
                  class="object-cover w-full h-full"
                />
              </button>
          `).join('')}
          <button
            class="px-2 py-1 rounded-lg bg-gray-200 hover:bg-gray-300"
            onclick="goToSlide('next')"
          >Next</button>
        `;
      }
    }

    // Navigation function must be global for onclick
    window.goToSlide = function(target) {
      fadeSlideOutThenIn(target);
    };

    // Initial render
    renderSlider("fade");

  </script>
</body>
</html>
